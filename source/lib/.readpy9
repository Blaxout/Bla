import os
import time

lang = os.getenv('WIKI_LANG', 'es')
lang_path = f"source/{lang}"

# --- UI Translations ---
ui_texts = {
    'es': {
        "main_prompt": "WIKI-BEST-TOOL > ",
        "continue_prompt": "PRESIONA ENTER PARA CONTINUAR...",
        "invalid_option": "[!]",
        "back_to_menu": "Volver al menú",
        "info_gen_prompt": "BEST-INFOGEN > ",
        "exploitation_prompt": "BEST-EXPLOTACIÓN > ",
        "vulnerabilities_prompt": "BEST-VULNERABILIDADES > ",
        "web_prompt": "BEST-WEB > ",
        "attacks_prompt": "BEST-ATACKS > ",
        "phishing_prompt": "BEST-PHISHING > ",
        "other_tools_prompt": "OTRAS-HERRAMIENTAS > ",
        "info_gen_title": "Generador de Informacion",
        "exploitation_title": "Explotacion",
        "vulnerabilities_title": "Vulnerabilidades",
        "infoweb_title": "InfoWeb",
        "passwords_title": "Passwords Atacks",
        "phishing_title": "Best Phishing",
        "other_tools_title": "Otras Herramientas",
        "ctrl_c": "\nCtrl c presionado"
    },
    'fr': {
        "main_prompt": "WIKI-MEILLEURS-OUTILS > ",
        "continue_prompt": "APPUYEZ SUR ENTRÉE POUR CONTINUER...",
        "invalid_option": "[!]",
        "back_to_menu": "Retour au menu",
        "info_gen_prompt": "MEILLEUR-INFOGEN > ",
        "exploitation_prompt": "MEILLEUR-EXPLOITATION > ",
        "vulnerabilities_prompt": "MEILLEUR-VULNERABILITES > ",
        "web_prompt": "MEILLEUR-WEB > ",
        "attacks_prompt": "MEILLEUR-ATTAQUES > ",
        "phishing_prompt": "MEILLEUR-PHISHING > ",
        "other_tools_prompt": "AUTRES-OUTILS > ",
        "info_gen_title": "Générateur d\'informations",
        "exploitation_title": "Exploitation",
        "vulnerabilities_title": "Vulnérabilités",
        "infoweb_title": "InfoWeb",
        "passwords_title": "Attaques de mots de passe",
        "phishing_title": "Meilleur Phishing",
        "other_tools_title": "Autres Outils",
        "ctrl_c": "\nCtrl C pressé"
    }
}
t = ui_texts.get(lang, ui_texts['es'])

def f():
    a = input(f"\033[1;33m{t['continue_prompt']}")
    os.system(f"bash {lang_path}/best-tool")

def invalid_option(var):
    print(f"\033[1;31m{t['invalid_option']}\033[1;39m", var)
    time.sleep(0.5)
    os.system(f"bash {lang_path}/best-tool")

try:
    b = input(f"\033[1;31m{t['main_prompt']}\033[1;39m")

    # --- Info Gen ---
    if b == "1" or b == "01":
        os.system(f"figlet {t['info_gen_title']}\n")
        print("\033[1;31m[" + "\033[1;39m 1" + "\033[1;31m]\033[1;39m A2sv"); print("\033[1;31m[" + "\033[1;39m 2" + "\033[1;31m]\033[1;39m AndroBugs"); print("\033[1;31m[" + "\033[1;39m 3" + "\033[1;31m]\033[1;39m AngryFuzzer"); print("\033[1;31m[" + "\033[1;39m 4" + "\033[1;31m]\033[1;39m Crips IP Tool"); print("\033[1;31m[" + "\033[1;39m 5" + "\033[1;31m]\033[1;39m Infoga"); print("\033[1;31m[" + "\033[1;39m 6" + "\033[1;31m]\033[1;39m PureBlood"); print("\033[1;31m[" + "\033[1;39m 7" + "\033[1;31m]\033[1;39m RED_HAWK\n")
        print(f"\033[1;31m[" + "\033[1;39m 99" + "\033[1;31m]\033[1;39m {t['back_to_menu']}\n")
        c = input(f"\033[1;31m{t['info_gen_prompt']}\033[1;39m")
        if c == "1": os.system(f"python {lang_path}/menu/menu_9/.a2sv"); f()
        elif c == "2": os.system(f"python {lang_path}/menu/menu_9/.androbugs"); f()
        elif c == "3": os.system(f"python {lang_path}/menu/menu_9/.angry"); f()
        elif c == "4": os.system(f"python {lang_path}/menu/menu_9/.crips"); f()
        elif c == "5": os.system(f"python {lang_path}/menu/menu_9/.infoga"); f()
        elif c == "6": os.system(f"python {lang_path}/menu/menu_9/.pure"); f()
        elif c == "7": os.system(f"python {lang_path}/menu/menu_9/.redhawk"); f()
        elif c == "99": os.system(f"bash {lang_path}/best-tool")
        else: invalid_option(c)

    # --- Exploitation ---
    elif b == "2" or b == "02":
        os.system(f"figlet {t['exploitation_title']}\n\n")
        print("\n\033[1;31m[" + "\033[1;39m 1" + "\033[1;31m]\033[1;39m CyberScan"); print("\033[1;31m[" + "\033[1;39m 2" + "\033[1;31m]\033[1;39m D-TECT"); print("\033[1;31m[" + "\033[1;39m 3" + "\033[1;31m]\033[1;39m Hakku Framework"); print("\033[1;31m[" + "\033[1;39m 4" + "\033[1;31m]\033[1;39m TheHarverster"); print("\033[1;31m[" + "\033[1;39m 5" + "\033[1;31m]\033[1;39m Zarp\n")
        print(f"\033[1;31m[" + "\033[1;39m 99" + "\033[1;31m]\033[1;39m {t['back_to_menu']}\n")
        c = input(f"\033[1;31m{t['exploitation_prompt']}\033[1;39m")
        if c == "1": os.system(f"python {lang_path}/menu/menu_9/.cyberscan"); f()
        elif c == "2": os.system(f"python {lang_path}/menu/menu_9/.dtect"); f()
        elif c == "3": os.system(f"python {lang_path}/menu/menu_9/.hakku"); f()
        elif c == "4": os.system(f"python {lang_path}/menu/menu_9/.theharver"); f()
        elif c == "5": os.system(f"python {lang_path}/menu/menu_9/.zarp"); f()
        elif c == "99": os.system(f"bash {lang_path}/best-tool")
        else: invalid_option(c)

    # Other menus follow the same pattern...
    elif b == "99":
        os.system("bash wiki")
    else:
        invalid_option(b)

except KeyboardInterrupt:
    print(f"\n{t['ctrl_c']}")