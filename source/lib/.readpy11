import os
import time

lang = os.getenv('WIKI_LANG', 'es')
lang_path = f"source/{lang}"

# --- UI Translations ---
ui_texts = {
    'es': {
        "main_prompt": "WIKI-SCRIPTS > ",
        "continue_prompt": "PRESIONA ENTER PARA CONTINUAR...",
        "script_heading": "Script:",
        "run_demo": "(P) Probar demo",
        "back_to_menu": "(E) Volver al menú",
        "try_it_yourself": "\nDebes probarlo tu mismo\n",
        "press_ctrl_c": "\n# Presiona ctrl c para terminar\n",
        "invalid_option": "[! ] Opción invalida > ",
        "ctrl_c": "\nCtrl c presionado"
    },
    'fr': {
        "main_prompt": "WIKI-SCRIPTS > ",
        "continue_prompt": "APPUYEZ SUR ENTRÉE POUR CONTINUER...",
        "script_heading": "Script :",
        "run_demo": "(P) Tester la démo",
        "back_to_menu": "(E) Retour au menu",
        "try_it_yourself": "\nVous devez l'essayer vous-même\n",
        "press_ctrl_c": "\n# Appuyez sur Ctrl+C pour terminer\n",
        "invalid_option": "[! ] Option invalide > ",
        "ctrl_c": "\nCtrl C pressé"
    }
}
t = ui_texts.get(lang, ui_texts['es'])

def f():
    a = input(t["continue_prompt"])
    os.system(f"bash {lang_path}/scripts")

def show_script(file, prompt_text):
    print(f"\033[1;33m{t['script_heading']}\033[1;39m\n")
    os.system(f"cat {lang_path}/menu/menu_11/{file}")
    print(f"\n\033[1;32m{t['run_demo']}")
    print(f"\033[1;31m{t['back_to_menu']}\n")
    return input(f"\033[1;31mSCRIPTS-\\033[1;39m{prompt_text} > ")

def run_demo(file):
    print("")
    os.system(f"bash {lang_path}/menu/menu_11/{file}")
    time.sleep(1)
    os.system(f"bash {lang_path}/scripts")

def run_interactive_demo(file, message):
    print(f"\n\033[0;36m{message}\033[1;39m\n")
    os.system(f"bash {lang_path}/menu/menu_11/{file}")
    os.system(f"bash {lang_path}/scripts")

try:
    b = input(f"\033[1;31m{t['main_prompt']}\033[1;39m")
    
    options = {
        "1": ("calcase", "CALCULADORA-SIMPLE", lambda: run_demo("calcase")),
        "2": ("colores", "COLORES", lambda: run_demo("colores")),
        "3": ("contarlineas", "CONTAR-LINEAS", lambda: (print(t['try_it_yourself']), f())),
        "4": ("copiarcontenido", "COPIAR-CONTENIDO", lambda: (print(t['try_it_yourself']), f())),
        "5": ("ctrpress", "CTRL-C", lambda: run_interactive_demo("ctrpress", t['press_ctrl_c'])),
        "6": ("division", "DIVISION", lambda: run_demo("division")),
        "7": ("hellwo", "HELLO-WORLD", lambda: run_demo("hellwo")),
        "8": ("menu", "MENU-IF", lambda: run_demo("menu")),
        "9": ("menuca", "MENU-CASE", lambda: (os.system(f"bash {lang_path}/menu/menu_11/menuca"), os.system(f"bash {lang_path}/scripts"))),
        "10": ("menufu", "MENU-FUNCIONES", lambda: (os.system(f"bash {lang_path}/menu/menu_11/menufu"), os.system(f"bash {lang_path}/scripts"))),
        "11": ("whilemenu", "WHILE-MENU", lambda: (os.system(f"bash {lang_path}/menu/menu_11/whilemenu"), os.system(f"bash {lang_path}/scripts"))),
        "12": ("interactiv", "MENU-INTERACTIVO", lambda: run_demo("interactiv")),
        "13": ("multi", "MULTIPLICACION", lambda: run_demo("multi")),
        "14": ("obtemperatura", "OBTENER-TEMPERATURA", lambda: run_demo("obtemperatura")),
        "15": ("parinpar", "PAR-INPAR", lambda: run_demo("parinpar")),
        "16": ("pesodirectorio", "PESO-DIRECTORIO", lambda: (print(t['try_it_yourself']), f())),
        "17": ("resta", "RESTA", lambda: run_demo("resta")),
        "18": ("rndemoji", "RANDOM-EMOJI", lambda: run_interactive_demo("rndemoji", t['press_ctrl_c'])) ,
        "19": ("spinner", "ANIMACION", lambda: run_interactive_demo("spinner", t['press_ctrl_c'])) ,
        "20": ("suma", "SUMA", lambda: run_demo("suma")),
        "21": ("tabla", "TABLA", lambda: run_demo("tabla")),
        "22": ("textolowercase", "TEXTO-MINUSCULAS", lambda: run_demo("textolowercase")),
        "23": ("dire", "DIRECTORIO", lambda: run_demo("dire")),
        "24": ("filee", "ARCHIVO", lambda: run_demo("filee")),
        "25": ("whileopp", "WHILE-LOOP", lambda: (os.system(f"bash {lang_path}/menu/menu_11/whileopp"), os.system(f"bash {lang_path}/scripts")))
    }

    if b in options:
        file, prompt, action = options[b]
        c = show_script(file, prompt)
        if c.lower() == 'p':
            action()
        else:
            os.system(f"bash {lang_path}/scripts")
    elif b == "99":
        os.system("bash wiki")
    else:
        print(f"\033[1;31m{t['invalid_option']}\033[1;39m", b)
        time.sleep(0.5)
        os.system(f"bash {lang_path}/scripts")

except KeyboardInterrupt:
    print(f"\n{t['ctrl_c']}")